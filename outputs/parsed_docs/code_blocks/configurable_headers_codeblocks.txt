Language: json
{
  "http": {
    "configurable_headers": {
      "include": ["x-user-id", "x-organization-id", "my-prefix-*"],
      "exclude": ["authorization", "x-api-key"]
    }
  }
}

---

Language: python
def my_node(state, config):
  organization_id = config["configurable"].get("x-organization-id")
  ...

---

Language: python
from langgraph.config import get_config

def search_everything(query: str):
  organization_id = get_config()["configurable"].get("x-organization-id")
  ...

---

Language: python
# my_graph.py.
import contextlib

@contextlib.asynccontextmanager
async def generate_agent(config):
  organization_id = config["configurable"].get("x-organization-id")
  if organization_id == "org1":
    graph = ...
    yield graph
  else:
    graph = ...
    yield graph


---

Language: json
{
  "graphs": {"agent": "my_grph.py:generate_agent"}
}

---

Language: json
{
  "http": {
    "configurable_headers": {
      "exclude": ["*"]
    }
  }
}

---

