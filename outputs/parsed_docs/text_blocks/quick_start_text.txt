!!! info "Prerequisites"

LangGraph Studio supports connecting to two types of graphs:

For applications that are [deployed](../../quick_start.md) on LangGraph Platform, you can access Studio as part of that deployment. To do so, navigate to the deployment in LangGraph Platform within the LangSmith UI and click the "LangGraph Studio" button.

This will load the Studio UI connected to your live deployment, allowing you to create, read, and update the [threads](../../concepts/threads.md), [assistants](../../../concepts/assistants.md), and [memory](../../../concepts//memory.md) in that deployment.

To test your locally running application using LangGraph Studio, ensure your application is set up following [this guide](https://langchain-ai.github.io/langgraph/cloud/deployment/setup/).

!!! info "LangSmith Tracing"
    For local development, if you do not wish to have data traced to LangSmith, set `LANGSMITH_TRACING=false` in your application's `.env` file. With tracing disabled, no data will leave your local server.

Next, install the [LangGraph CLI](../../../concepts/langgraph_cli.md):

and run:

!!! warning "Browser Compatibility"
    Safari blocks `localhost` connections to Studio. To work around this, run the above command with `--tunnel` to access Studio via a secure tunnel.

This will start the LangGraph Server locally, running in-memory. The server will run in watch mode, listening for and automatically restarting on code changes. Read this [reference](https://langchain-ai.github.io/langgraph/cloud/reference/cli/#dev) to learn about all the options for starting the API server.

If successful, you will see the following logs:

Once running, you will automatically be directed to LangGraph Studio.

For an already running server, access Studio by either:

For step-by-step debugging with breakpoints and variable inspection:

Then attach your preferred debugger:

=== "VS Code"
Add this configuration to `launch.json`:
`json
      {
        "name": "Attach to LangGraph",
        "type": "debugpy",
        "request": "attach",
        "connect": {
          "host": "0.0.0.0",
          "port": 5678
        }
      }
    `
Specify the port number you chose in the previous step.

=== "PyCharm" 1. Go to Run â†’ Edit Configurations 2. Click + and select "Python Debug Server" 3. Set IDE host name: `localhost` 4. Set port: `5678` (or the port number you chose in the previous step) 5. Click "OK" and start debugging

For issues getting started, please see this [troubleshooting guide](../../../troubleshooting/studio.md).

See the following guides for more information on how to use Studio:

